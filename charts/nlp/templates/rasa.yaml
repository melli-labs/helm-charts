apiVersion: v1
kind: ConfigMap
metadata:
  name: rasa-config-map
  namespace: {{ .Release.Namespace }}
data:
  credentials.yaml: |
    rest:
  endpoints.yaml: |
    action_endpoint:
      url: "http://rasa-actions-service.{{ .Release.Namespace }}.svc.cluster.local/webhook"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rasa-deployment
  namespace: {{ .Release.Namespace }}
  labels:
    app: rasa
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rasa
  template:
    metadata:
      labels:
        app: rasa
    spec:
      containers:
        - name: rasa
          image: {{ .Values.images.rasa }}
          ports:
            - name: app
              containerPort: 5005
          workingDir: /rasa
          securityContext:
            allowPrivilegeEscalation: false
            runAsUser: 0
          env:
            - name: RASA_TELEMETRY_ENABLED
              value: "false"
          volumeMounts:
            - name: rasa-config-files
              mountPath: /rasa/credentials.yaml
              subPath: credentials.yaml
            - name: rasa-config-files
              mountPath: /rasa/endpoints.yaml
              subPath: endpoints.yaml
            - name: rasa-models
              mountPath: /rasa/models
          command:
            [
              "rasa",
              "run",
              "--enable-api",
              "--credentials",
              "credentials.yml"
            ]
          resources:
            requests:
              memory: "1024Mi"
              cpu: "500m"
            limits:
              memory: "8192Mi"
              cpu: "2000m"
      volumes:
        - name: rasa-config-files
          configMap:
            name: rasa-config-map
        - name: rasa-models
          persistentVolumeClaim:
            claimName: rasa-models-pvc
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: rasa-models-pvc
  namespace: {{ .Release.Namespace }}
spec:
  accessModes:
    - ReadWriteOnce
  storageClassName: {{ .Values.storageClass }}
  resources:
    requests:
      storage: 10Gi
---
apiVersion: v1
kind: Service
metadata:
  name: rasa-service
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    app: rasa
  ports:
    - port: 80
      targetPort: app
      protocol: TCP
